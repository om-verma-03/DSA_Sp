#include<iostream>
using namespace std;

int partition(int *arr,int s, int e){
    int pivot=arr[s];

    int count=0;
    for(int i=s+1;i<=e;i++){
        if(arr[i]<=pivot){
            count++;
        }
    }

    //Place pivot at right position
    int pivotPosition = s+count;
    swap(arr[pivotPosition],arr[s]);

    int i=s,j=e;
    while(i<pivotPosition && j>pivotPosition){
        while(arr[i]<pivot){
            i++;
        }
        while(arr[j]>pivot){
            j--;
        }

        if(i<pivotPosition && j>pivotPosition){
            swap(arr[i++],arr[j--]);
        }
    }
    return pivotPosition;
}
void quick_Sort(int *arr,int s,int e){
    //Base case
    if(s>=e){
        return;
    }

    //Partition 
    int p=partition(arr,s,e);

    //Left part sort krrega
    quick_Sort(arr,s,p-1);

    //Right part sort krrega
    quick_Sort(arr,p+1,e);
}
int main(){
    int arr[5]={2,4,1,6,9};
    int n=5;

    quick_Sort(arr,0,n-1);

    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
    return 0;
}
