class Solution {
public:
    void create(ListNode* head,vector<int>& ans){
        ListNode* temp = head;

        while(temp != NULL){
            ans.push_back(temp->val);
            temp = temp->next;
        }
    }
    TreeNode* BST(vector<int>& inorder,int start,int end){
        if(start > end){
            return NULL;
        }

        int mid = (start+end)/2;
        TreeNode* root = new TreeNode(inorder[mid]);

        root->left = BST(inorder,start,mid-1);
        root->right = BST(inorder,mid+1,end);
        return root;
    }
    TreeNode* sortedListToBST(ListNode* head) {
        vector<int> ans;
        create(head,ans);

        return BST(ans,0,ans.size()-1);
    }
};
