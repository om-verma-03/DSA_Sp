class Solution {
public:
    void solve(TreeNode* root,vector<int>& inorder){
        if(root == NULL){
            return;
        }

        solve(root->left,inorder);
        inorder.push_back(root->val);
        solve(root->right,inorder);
    }
    TreeNode* create(vector<int>& inorder,int start,int end){
        if(start > end){
            return NULL;
        }

        int mid = (start+end)/2;
        TreeNode* root = new TreeNode(inorder[mid]);

        root->left = create(inorder,start,mid-1);
        root->right = create(inorder,mid+1,end);

        return root;
    }
    TreeNode* balanceBST(TreeNode* root) {
        vector<int> inorder;
        solve(root,inorder);

        TreeNode* root1 = create(inorder,0,inorder.size()-1);
        return root1;
    }
};
