class Solution{
	public:
	long long solve(int N,int size,vector<int>& dp){
	    if(N == 0){
	        return 0;
	    }
	    if(dp[N] != -1){
	        return dp[N];
	    }
	    
	    long long count = INT_MAX;
	    for(int i=1;i*i<size;i++){
	        if(N-i*i >= 0){
	            count = min(count,solve(N-(i*i),size,dp)+1);
	        }
	    }
	    return dp[N] = count;
	}
	long long solve_tab(int N,int size){
	    vector<int> dp(N+1,0);
	    
	    dp[0] = 0;
	    
	    for(int i=1;i<=N;i++){
	        long long count = INT_MAX;
    	    for(int j=1;j*j<size;j++){
    	        if(i-j*j >= 0){
    	            count = min(count,dp[i-(j*j)]+1ll);
    	        }
    	    }
    	    dp[i] = count;
	    }
	    return dp[N];
	}
	int MinSquares(int n){
	    int sq = sqrt(n);
	    if(sq*sq == n){
	        return 1;
	    }
	   // vector<int> dp(n+1,-1);
	   // return solve(n,n,dp);
	   return solve_tab(n,n);
	}
};
