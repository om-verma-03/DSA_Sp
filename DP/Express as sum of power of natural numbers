class Solution{
    public:
    int mod = 1e9+7;
    int solve(int target,int ind,int x,vector<vector<int>>& dp){
        if(target < 0){
            return 0;
        } 
        if(target == 0){
            return 1;
        }
        if(pow(ind,x) > target){
            return 0;
        }
        if(dp[target][ind] != -1){
            return dp[target][ind];
        }
        
        int take = solve(target-pow(ind,x),ind+1,x,dp);
        int not_take = solve(target,ind+1,x,dp);
        
        return dp[target][ind] = (take+not_take)%mod;
    }
    int numOfWays(int n, int x){
        vector<vector<int>> dp(n+1,vector<int>(n+1,-1));
        return solve(n,1,x,dp);
    }
};
