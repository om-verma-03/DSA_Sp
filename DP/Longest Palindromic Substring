class Solution{   
public:
    bool solve(int i,int j,string st,vector<vector<int>>& dp){
        if(dp[i][j] != -1){
            cout<<"Hello"<<endl;
            return dp[i][j];
        }
        int strt = i;
        int end = j;
        
        while(strt < end){
            if(st[strt] != st[end]){
                return dp[i][j] = false;
            }
            strt++;end--;
        }
        return dp[i][j] = true;
    }
    string longestPalindrome(string S){
        int maxi = INT_MIN;
        string ans;
        vector<vector<int>> dp(S.size()+1,vector<int>(S.size()+1,-1));
        
        for(int i=0;i<S.size();i++){
            for(int j=i;j<S.size();j++){
                if(solve(i,j,S,dp) && (j-i+1) > maxi){
                    maxi = j-i+1;
                    ans = S.substr(i,j-i+1);
                }
            }
        }
        return ans;
    }
};
