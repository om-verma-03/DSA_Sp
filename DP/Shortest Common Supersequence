class Solution{
    public:
    int solve(string& a,string& b,int i,int j,vector<vector<int>>& dp){
        //Base case
        if(i >= a.size()){
            return 0;
        }
        if(j >= b.size()){
            return 0;
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        
        int op1 = 0,op2 = 0,op3 = 0;
        if(a[i] == b[j]){
            op1 = 1+solve(a,b,i+1,j+1,dp);
        }
        else{
            op2 = solve(a,b,i+1,j,dp);
            op3 = solve(a,b,i,j+1,dp);
        }
        return dp[i][j] = max(op1,max(op2,op3));
    }
    int shortestCommonSupersequence(string X, string Y, int m, int n){
        vector<vector<int>> dp(X.size()+1,vector<int>(Y.size(),-1));
        int size = m+n;
        return size-solve(X,Y,0,0,dp);
    }
};
