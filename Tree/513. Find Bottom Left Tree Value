class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        map<int,int> mp;

        vector<int> ans;
        queue<pair<TreeNode*,int>> que;
        que.push({root,0});

        while(!que.empty()){
            auto temp = que.front();
            que.pop();

            TreeNode* frontNode = temp.first;
            int lvl = temp.second;

            if(mp.find(lvl) == mp.end()){
                mp[lvl] = frontNode->val;
            }

            if(frontNode->left){
                que.push({frontNode->left,lvl+1});
            }
            if(frontNode->right){
                que.push({frontNode->right,lvl+1});
            }
        }

        for(auto it: mp){
            ans.push_back(it.second);
        }
        return ans[ans.size()-1];
    }
};
