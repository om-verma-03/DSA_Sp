class Solution {
  public:
    vector <int> bottomView(Node *root) {
        map<int,int> mp;
        
        vector<int> ans;
        
        queue<pair<Node*,int>> que;
        que.push({root,0});
        
        while(!que.empty()){
            auto temp = que.front();
            que.pop();
            
            Node* frontNode = temp.first;
            int hd = temp.second;
            
            mp[hd] = frontNode->data;
            
            if(frontNode->left){
                que.push({frontNode->left,hd-1});
            }
            if(frontNode->right){
                que.push({frontNode->right,hd+1});
            }
        }
        
        for(auto it: mp){
            ans.push_back(it.second);
        }
        return ans;
    }
};
