#include<bits/stdc++.h>
using namespace std;

class Node{
    public:
    int data;
    Node* left;
    Node* right;

    Node(int data){
        this->data = data;
        left = NULL;
        right = NULL;
    }
};

Node* buildTree(){
    int data;
    cout<<"Enter the data: ";
    cin>>data;

    if(data == -1){
        return NULL;
    }

    Node* root = new Node(data);

    cout<<"Enter the data to the left of: "<<data<<endl;
    root->left = buildTree();
    cout<<"Enter the data to the right of: "<<data<<endl;
    root->right = buildTree();

    return root;
}

void Level_order_traversal(Node* root){
    queue<Node*> que;
    que.push(root);

    while(!que.empty()){
        int size = que.size();
        while(size--){
            Node* node = que.front();
            que.pop();

            cout<<node->data<<" ";

            if(node->left){
                que.push(node->left);
            }
            if(node->right){
                que.push(node->right);
            }
        }
        cout<<endl;
    }
}

int main(){
    Node* root = NULL;

    root = buildTree();

    Level_order_traversal(root); 
    return 0;
}
